{
  "adapter_name": "decode",
  "analysis_context": "Automated detection via Nautilus Trader Rig",
  "bug_id": "AUTO_BUG_decode_14_183315",
  "code_sample": "See file content",
  "description": "Multiple critical financial calculation errors exist in the `decode_multiplier` function. When handling value `0` or `i64::MAX`, the function returns a hardcoded `Quantity::from(1)`, but when handling other values, it performs a floating-point division (`value as f64 / DATABENTO_FIXED_SCALAR`) and converts to string before parsing. This approach introduces precision loss and potential rounding errors in financial calculations, which could lead to incorrect position sizing, margin calculations, and P&L calculations.",
  "file_location": {
    "details": {
      "absolute_path": "/Users/vadimnicolai/Public/trading/nautilus_trader/nautilus-trader-rig/../crates/adapters/databento/src/decode.rs",
      "directory": "/Users/vadimnicolai/Public/trading/nautilus_trader/nautilus-trader-rig/../crates/adapters/databento/src",
      "file_size_bytes": 66041,
      "filename": "decode.rs",
      "last_modified_timestamp": 1755850661,
      "relative_path": "../crates/adapters/databento/src/decode.rs"
    },
    "source_location": {}
  },
  "fix_suggestion": "Use precise integer arithmetic instead of floating-point conversions. For values that represent fixed-point decimals, use a method that preserves precision:",
  "severity": "CRITICAL",
  "timestamp": "20250825_183315",
  "workspace_info": {
    "branch": "main",
    "commit_hash": "647630eb9ce73d7235c504cfe96cd6553b6ab21b",
    "repository": "nautilus_trader"
  }
}