{
  "adapter_name": "math",
  "analysis_context": "Automated detection via Nautilus Trader Rig",
  "bug_id": "AUTO_BUG_math_3_115053",
  "code_sample": "See file content",
  "description": "The code uses string parsing to convert U256/I256 to f64, which introduces severe precision loss for large values. f64 has only 53 bits of precision (about 15-17 decimal digits), while U256/I256 can represent numbers up to 256 bits (about 78 decimal digits). This will cause catastrophic financial calculation errors for large token amounts, potentially resulting in massive financial losses due to incorrect value calculations. The current approach also has performance overhead from string conversion and parsing.",
  "fix_suggestion": "Use proper big integer arithmetic instead of string conversion. For U256, use: `amount / U256::from(10).pow(U256::from(decimals))` for the integer part and calculate the fractional part separately. Consider using a decimal arithmetic library like `rust-decimal` for financial calculations instead of f64 to avoid precision loss entirely.",
  "relative_path": "../crates/adapters/blockchain/src/math.rs",
  "severity": "CRITICAL",
  "timestamp": "20250826_115053",
  "workspace_info": {
    "branch": "main",
    "commit_hash": "26614d3961221b67c16f413ed5f2a82da21534d4",
    "repository": "nautilus_trader"
  }
}